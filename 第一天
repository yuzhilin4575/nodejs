js  sdk             授权地址
yield                   es6
koa                 处理服务器应用初始化 接口调用 数据响应
promise             bluebird   处理封装异步请求
request            网络请求 
ejs                  微信 数据包装xml 把数据作为变量替换到xml字符中
lodash              做数组拆分
Heredoc            把函数体多行注释作为字符串提取  用来降低拼接字符串成本
raw-body          获取http请求返回的可读内容实体
sha1             加密
xml2js 模块        把微信服务器返回的数据xml解析为js对象

 配置 接入流程
 加密认证环节
 票据 access_token
 
 测试公众账号


验证公众号
token timestamp nonce 字典排序 sha1加密 r===signature  原封不动返回echostr
 
 
 写段 代码实现加密认证逻辑
 
 添加app.js文件
 'use strict'

var Koa = require('koa')
var sha1 = require('sha1')
var config = {
    wechat: {
        appID: 'wx3f7b930491c50c04'，
        appSecret: '9f289594669317f30d331bf097bc78e6',
        token: 'hello 2017'
    }
}

var app = new Koa()

app.use(function *(next) {
    console.log(this.query)

    var token = config.wechat.token
    var signature = this.query.signature
    var nonce = this.query.nonce
    var timestamp = this.query.timestamp
    var echostr = this.query.echostr
    var str = [token,timestamp,nonce].sort().join('')
    var sha = sha1(str)

    if(sha === signature) {
        this.body = echostr + ''
    }
    else {
        this.body = 'wrong'
    }
})

app.listen(1234)
console.log('Listening:1234')
 
 
 
 node --harmony app.js 运行项目  
 
